# Do not change version. This is the version of aws buildspec, not the version of your buldspec file.
# attempting a generic template 
version: 0.2
env:
  secrets-manager:
    GH_PASSWORD: "github:password"
    GH_USER: "github:username"

phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - echo Installing Mocha...
      - mkdir -p ~/.ssh
      - echo "$GH_PASSWORD" > ~/.ssh/id_ed25519
      - chmod 600 ~/.ssh/id_ed25519
      - ssh-keygen -F github.com || ssh-keyscan github.com >>~/.ssh/known_hosts
      - git clone git@github.com:chicagozer/rtdbtg.git /rtdbtg
      - git config --global user.email "chicagozer@gmail.com"
      - git config --global user.name "Jim Mittler"
  pre_build:
    commands:
      - AWS_ACCOUNT_ID=${CODEBUILD_BUILD_ARN} && IFS=':' && set -- $AWS_ACCOUNT_ID && AWS_ACCOUNT_ID=$5
      - echo Installing source NPM dependencies...
      - npm install
      - aws sts get-caller-identity --query "Account" --output text
      - aws ecr-public get-login-password --region us-east-1  | docker login --username AWS --password-stdin public.ecr.aws
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      - CODEBUILD_WEBHOOK_TRIGGER=${CODEBUILD_WEBHOOK_TRIGGER:-unknown}
      - IMAGE_TAG=`echo $CODEBUILD_WEBHOOK_TRIGGER | tr / _`
      - IMAGE_TAG=$IMAGE_TAG.$CODEBUILD_BUILD_NUMBER
      - HASH=`echo $CODEBUILD_RESOLVED_SOURCE_VERSION|  cut -c1-7`
      - IMAGE_REPO_NAME=${CODEBUILD_BUILD_ID%:*}
      - export
  build:
    commands:
      - echo Build started on `date`
      - echo Compiling the Node.js code
      - npm test
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:$IMAGE_TAG      
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:$HASH
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$HASH
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:latest
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:$HASH
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$HASH
      - docker push public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - jq  ".app_version.${IMAGE_REPO_NAME} = \"${IMAGE_TAG}\"" /rtdbtg/terragrunt/appversion.tfvars.json > appvars.auto.tfvars.json.tmp
      - mv -f appvars.auto.tfvars.json.tmp /rtdbtg/terragrunt/appversion.tfvars.json
      - cat /rtdbtg/terragrunt/appversion.tfvars.json
      - cd /rtdbtg ; git commit -am "successful AWS code build ${IMAGE_TAG}" ;  git push --set-upstream origin main

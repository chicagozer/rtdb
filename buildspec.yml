# Do not change version. This is the version of aws buildspec, not the version of your buldspec file.
version: 0.2
env:
  variables:
    IMAGE_REPO_NAME: "rtdb"
    IMAGE_TAG: "unknown"

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Installing Mocha...
      - export
  pre_build:
    commands:
      - AWS_ACCOUNT_ID=${CODEBUILD_BUILD_ARN} && IFS=':' && set -- $AWS_ACCOUNT_ID && AWS_ACCOUNT_ID=$5
      - echo Installing source NPM dependencies...
      - npm install
      - aws sts get-caller-identity --query "Account" --output text
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
#      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/d5y7k0n6
      - if [ -z "$CODEBUILD_WEBHOOK_TRIGGER ]; then CODEBUILD_WEBHOOK_TRIGGER=unknown fi
      - IMAGE_TAG=`echo $CODEBUILD_WEBHOOK_TRIGGER | tr / _`
      - IMAGE_TAG=$IMAGE_TAG.$CODEBUILD_BUILD_NUMBER
      - HASH=`echo $CODEBUILD_SOURCE_VERSION |  cut -c1-7`
  build:
    commands:
      - echo Build started on `date`
      - echo Compiling the Node.js code
      - npm test
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
#      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:$IMAGE_TAG      
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$HASH
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
#      - docker push public.ecr.aws/d5y7k0n6/$IMAGE_REPO_NAME:$IMAGE_TAG
#      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$HASH
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

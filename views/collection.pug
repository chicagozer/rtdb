//-# Â© 2014 by Rheosoft. All rights reserved. 
//-# Licensed under the RTDB Software License version 1.0
extends nav
block vars
  - var title = 'Collection'
block append content
 div.page-header
   h1 Collection
     small #{' ' +json._id}
 
   a.btn(href='/web/') Home
   a.btn(href='/web/collections/') Up
   a#savebtn.btn Save
   a#delbtn.btn Remove
   a#loadbtn.btn Reload
   a#clearbtn.btn Clear
   a.btn(href="views/") Views
   a.btn(href="stats/") Stats 
   a.btn(href='/db/collections/' + json._id + '/') Json
 .well(style='background-color:white')
   form
     fieldset(style='height:120px')
       div.control-group
         label.control-label(for='ikey') key:
         input#ikey.input-small(type='text', value=json._key)
       div.control-group
         div.controls
           label.control-label(for='itransient') Transient:
             if (json._transient) 
               input#itransient(type='checkbox', checked='on' )
             else
               input#itransient(type='checkbox')
           label.control-label(for='ipriority') priority:
             input#ipriority.input-mini(type='number', min='0', value=json._priority)
           label.control-label(for='iexpiration') expiration:
             input#iexpiration.input-mini(type='number', min='0', value=json._expiration)
   div.tabbable
     ul.nav.nav-tabs
       li.active: a(href='#tab1',data-toggle='tab') onAdd
   
     div.tab-content
       div#tab1.tab-pane.active
         p function (item,database)
         div#onaddeditor.myeditor
      
       
 script(src='/ace-builds/src-noconflict/ace.js')
 input(type='hidden', id='hid', value=json._id)
 input(type='hidden', id='honadd', value=json._onAdd)
 script.
        jQuery(document).ready(

        function() {
        
        
          ace.edit("onaddeditor").getSession().setMode("ace/mode/javascript")
          ace.edit("onaddeditor").setTheme("ace/theme/tomorrow");
          if ($("#honadd").val() !== 'undefined')
            ace.edit("onaddeditor").getSession().setValue($("#honadd").val())      
        
          //variable to hold request
          var request;
          
          $("#loadbtn").click(function(event){
            
             var url = "/db/collections/" + $("#hid").val() + '/load';
             request = $.ajax({
               contentType: "application/json",
               url: url,
               type: "post",
               data: "{}"
               });
                  
             // callback handler that will be called on success
             request.done(function(response, textStatus, jqXHR) {
                // log a message to the console
                console.log("Hooray, it worked!");
                });

             // callback handler that will be called on failure
             request.fail(function(jqXHR, textStatus, errorThrown) {
               // log the error to the console
               console.error("The following error occurred: " + textStatus, errorThrown);
               });  
          });
          
          $("#delbtn").click(function(event){
             bootbox.confirm("Are you sure?", function(result) {
             if (result)
                {
                var url = "/db/collections/" + $("#hid").val();
                request = $.ajax({
                  contentType: "application/json",
                  url: url,
                  type: "delete",
                  data: "{}"
                  });
                  
                // callback handler that will be called on success
                request.done(function(response, textStatus, jqXHR) {
                   // log a message to the console
                   console.log("Hooray, it worked!");
                   var url = "/web/collections/";
                   window.location.replace(url);
                   });

                // callback handler that will be called on failure
                request.fail(function(jqXHR, textStatus, errorThrown) {
                  // log the error to the console
                  console.error("The following error occurred: " + textStatus, errorThrown);
                  });  
                }
             }); 
          });
          
           $("#clearbtn").click(function(event){
             bootbox.confirm("Are you sure?", function(result) {
             if (result)
                {
                var url = '/db/collections/' + $("#hid").val() + '/documents?permanent=true';
                request = $.ajax({
                  contentType: "application/json",
                  url: url,
                  type: "delete",
                  data: "{}"
                  });
                  
                // callback handler that will be called on success
                request.done(function(response, textStatus, jqXHR) {
                   // log a message to the console
                   console.log("Hooray, it worked!");
                  
                   });

                // callback handler that will be called on failure
                request.fail(function(jqXHR, textStatus, errorThrown) {
                  // log the error to the console
                  console.error("The following error occurred: " + textStatus, errorThrown);
                  });  
                }
             }); 
          });
          
          // bind to the submit event of our form
          $("#savebtn").click(function(event) {
            
            console.log('submitting!')
            // abort any pending request
            if (request) {
              request.abort();
            }
            
            // let's disable the inputs for the duration of the ajax request
           //$inputs.prop("disabled", true);

            var url = "/db/collections/" + $("#hid").val()
            // fire off the request to /form.php
            var priority;
            if  ($('#ipriority').val())
              priority = parseInt($('#ipriority').val())
            var expiration;
            if  ($('#iexpiration').val())
              expiration = parseInt($('#iexpiration').val())
            request = $.ajax({
              contentType: "application/json",
              url: url,
              type: "put",
              data: JSON.stringify({
                      _key: $("#ikey").val(),
                      _transient: $('#itransient').is(':checked'),
                      _priority: priority,
                      _expiration: expiration,
                      _onAdd: ace.edit("onaddeditor").getSession().getValue()
                    })
            });

            // callback handler that will be called on success
            request.done(function(response, textStatus, jqXHR) {
              // log a message to the console
              console.log("Hooray, it worked!");
            });

            // callback handler that will be called on failure
            request.fail(function(jqXHR, textStatus,
            errorThrown) {
              // log the error to the console
              console.error("The following error occurred: " + textStatus, errorThrown);
            });

            // callback handler that will be called regardless
            // if the request failed or succeeded
            request.always(function() {
              // reenable the inputs
              //$inputs.prop("disabled", false);
            });

            // prevent default posting of form
            event.preventDefault();
          });
        });
